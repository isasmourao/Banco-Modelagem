@page "/cadastro-cliente"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using Banco.Models.Entities
@using Banco.Services.Interfaces
@inject IClienteService ClienteService

<h3>Cadastro de Cliente</h3>

<EditForm Model="clienteForm" OnValidSubmit="Cadastrar" FormName="cadastroCliente" Enhanced="false">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText @bind-Value="clienteForm.Nome" placeholder="Nome" class="form-control mb-2" />
    <InputText @bind-Value="clienteForm.CPF" placeholder="CPF" class="form-control mb-2" />
    <InputText @bind-Value="clienteForm.Senha" type="password" placeholder="Senha" class="form-control mb-2" />

    <button type="submit" class="btn btn-primary">Cadastrar</button>
</EditForm>

@if (!string.IsNullOrEmpty(mensagem))
{
    <div class="alert alert-info mt‑3">@mensagem</div>
}

@code {
    private ClienteForm clienteForm = new();
    private string mensagem;

    private void Cadastrar()
    {
        try
        {
            var cliente = new Cliente();
            cliente.SetNome(clienteForm.Nome);
            cliente.SetCpf(clienteForm.CPF);
            cliente.SetSenha(clienteForm.Senha);

            ClienteService.CriarCliente(cliente);
            mensagem = "Cliente cadastrado com sucesso!";
            clienteForm = new();
        }
        catch (Exception ex)
        {
            mensagem = $"Erro: {ex.Message}";
        }
    }

    public class ClienteForm
    {
        [Required(ErrorMessage = "Nome é obrigatório")]
        public string Nome { get; set; }

        [Required(ErrorMessage = "CPF é obrigatório")]
        public string CPF { get; set; }

        [Required(ErrorMessage = "Senha é obrigatória")]
        [MinLength(6, ErrorMessage = "Senha deve ter no mínimo 6 caracteres")]
        public string Senha { get; set; }
    }
}
